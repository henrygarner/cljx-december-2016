{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.color.core, :imports nil, :requires {m thi.ng.math.core, thi.ng.math.core thi.ng.math.core, f thi.ng.strf.core, thi.ng.strf.core thi.ng.strf.core, err thi.ng.xerror.core, thi.ng.xerror.core thi.ng.xerror.core}, :uses {TWO_PI thi.ng.math.core, PI thi.ng.math.core}, :defs {hsl-hue {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 796, :column 8, :end-line 796, :end-column 15, :private true, :arglists (quote ([f1 f2 h]))}, :private true, :name thi.ng.color.core/hsl-hue, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([f1 f2 h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 796, :end-line 796, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f1 f2 h]))}, proxied-color-type {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 663, :column 7, :end-line 663, :end-column 25, :arglists (quote ([to-rgba from-rgba]))}, :name thi.ng.color.core/proxied-color-type, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :method-params ([to-rgba from-rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 663, :end-line 663, :max-fixed-arity 2, :fn-var true, :arglists (quote ([to-rgba from-rgba]))}, magenta {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 51, :column 4, :end-line 51, :end-column 11, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/magenta, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, blend {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 61, :column 4, :end-line 61, :end-column 9, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ dest t]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/blend, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 9, :method-params ([_ dest t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 61, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ dest t])), :doc nil}, hex->int {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 919, :column 7, :end-line 919, :end-column 15, :arglists (quote ([hex]))}, :name thi.ng.color.core/hex->int, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([hex]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 919, :end-line 919, :max-fixed-arity 1, :fn-var true, :arglists (quote ([hex]))}, as-hsla {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 29, :column 4, :end-line 29, :end-column 11, :protocol thi.ng.color.core/IHSLConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IHSLConvert, :name thi.ng.color.core/as-hsla, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, Int32 {:num-fields 1, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/Int32, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :type true, :column 10, :line 259, :record false, :end-line 259, :skip-protocol-flag #{cljs.core/IDeref}}, ->t_thi$ng$color$core15942 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta15943])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core15942, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta15943]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 666, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta15943])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, BLUE {:name thi.ng.color.core/BLUE, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 788, :column 1, :end-line 788, :end-column 10, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 788, :column 6, :end-line 788, :end-column 10}}, parse-css {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 936, :column 8, :end-line 936, :end-column 17, :private true, :arglists (quote ([col]))}, :private true, :name thi.ng.color.core/parse-css, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 17, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 936, :end-line 936, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, GREEN {:name thi.ng.color.core/GREEN, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 787, :column 1, :end-line 787, :end-column 11, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 787, :column 6, :end-line 787, :end-column 11}}, analog {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 998, :column 7, :end-line 998, :end-column 13, :arglists (quote ([col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness."}, :name thi.ng.color.core/analog, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 13, :method-params ([col theta sat bright]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 998, :end-line 998, :max-fixed-arity 4, :fn-var true, :arglists (quote ([col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness."}, t_thi$ng$color$core15948 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core15948, :file "resources/public/js/out/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 666, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, ycbcra->rgba {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 854, :column 8, :end-line 854, :end-column 20, :private true, :arglists (quote ([ycbcra] [y cb cr] [y cb cr a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ycbcra] [y cb cr] [y cb cr a]), :arglists ([ycbcra] [y cb cr] [y cb cr a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/ycbcra->rgba, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([ycbcra] [y cb cr] [y cb cr a]), :arglists ([ycbcra] [y cb cr] [y cb cr a]), :arglists-meta (nil nil nil)}, :method-params ([ycbcra] [y cb cr] [y cb cr a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 854, :end-line 854, :max-fixed-arity 4, :fn-var true, :arglists ([ycbcra] [y cb cr] [y cb cr a])}, IIntConvert {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 37, :column 14, :end-line 37, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {as-int24 [[_]], as-int32 [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/IIntConvert, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 37, :protocol-info {:methods {as-int24 [[_]], as-int32 [[_]]}}, :info nil, :end-line 37, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, hcya {:name thi.ng.color.core/hcya, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 956, :column 1, :end-line 956, :end-column 10, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 956, :column 6, :end-line 956, :end-column 10}}, adjust-brightness {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 58, :column 4, :end-line 58, :end-column 21, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ offset]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/adjust-brightness, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 21, :method-params ([_ offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ offset])), :doc nil}, as-rgba {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 23, :column 4, :end-line 23, :end-column 11, :protocol thi.ng.color.core/IRGBConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IRGBConvert, :name thi.ng.color.core/as-rgba, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, dist-hsv {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 1026, :column 7, :end-line 1026, :end-column 15, :arglists (quote ([a b])), :doc "Returns HSV distance of any two colors"}, :name thi.ng.color.core/dist-hsv, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1026, :end-line 1026, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "Returns HSV distance of any two colors"}, TWO_THIRD {:name thi.ng.color.core/TWO_THIRD, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 14, :column 1, :end-line 14, :end-column 15, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 14, :column 6, :end-line 14, :end-column 15}}, ->Int32 {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 259, :column 10, :end-line 259, :end-column 15, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([col]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->Int32, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col])), :skip-protocol-flag #{cljs.core/IDeref}}, ycbcra {:name thi.ng.color.core/ycbcra, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 960, :column 1, :end-line 960, :end-column 12, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 960, :column 6, :end-line 960, :end-column 12}}, SIXTH {:name thi.ng.color.core/SIXTH, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 15, :column 6, :end-line 15, :end-column 11}}, invert {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 60, :column 4, :end-line 60, :end-column 10, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/invert, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, cie1931->rgb {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 908, :column 8, :end-line 908, :end-column 20, :private true, :arglists (quote ([xyz] [x y z] [x y z a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([xyz] [x y z] [x y z a]), :arglists ([xyz] [x y z] [x y z a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/cie1931->rgb, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([xyz] [x y z] [x y z a]), :arglists ([xyz] [x y z] [x y z a]), :arglists-meta (nil nil nil)}, :method-params ([xyz] [x y z] [x y z a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 908, :end-line 908, :max-fixed-arity 4, :fn-var true, :arglists ([xyz] [x y z] [x y z a])}, rotate-hue {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 56, :column 4, :end-line 56, :end-column 14, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ theta]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/rotate-hue, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :method-params ([_ theta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ theta])), :doc nil}, YELLOW {:name thi.ng.color.core/YELLOW, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 791, :column 1, :end-line 791, :end-column 12, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 791, :column 6, :end-line 791, :end-column 12}}, ->RGBA {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 63, :column 10, :end-line 63, :end-column 14, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([r g b a]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->RGBA, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :method-params ([r g b a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 63, :end-line 63, :max-fixed-arity 4, :fn-var true, :arglists (quote ([r g b a])), :skip-protocol-flag #{cljs.core/IDeref}}, black {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 53, :column 4, :end-line 53, :end-column 9, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/black, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, Int24 {:num-fields 1, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/Int24, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :type true, :column 10, :line 183, :record false, :end-line 183, :skip-protocol-flag #{cljs.core/IDeref}}, CSS {:num-fields 1, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/CSS, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 13, :type true, :column 10, :line 592, :record false, :end-line 592, :skip-protocol-flag #{cljs.core/IDeref}}, BLACK {:name thi.ng.color.core/BLACK, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 792, :column 1, :end-line 792, :end-column 11, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 792, :column 6, :end-line 792, :end-column 11}}, hue {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 46, :column 4, :end-line 46, :end-column 7, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/hue, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 7, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, int32 {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 759, :column 7, :end-line 759, :end-column 12, :arglists (quote ([col] [col alpha])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col alpha]), :arglists ([col] [col alpha]), :arglists-meta (nil nil)}}, :name thi.ng.color.core/int32, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col alpha]), :arglists ([col] [col alpha]), :arglists-meta (nil nil)}, :method-params ([col] [col alpha]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 759, :end-line 759, :max-fixed-arity 2, :fn-var true, :arglists ([col] [col alpha])}, parse-channel-val {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 930, :column 8, :end-line 930, :end-column 25, :private true, :arglists (quote ([c]))}, :private true, :name thi.ng.color.core/parse-channel-val, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 930, :end-line 930, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, rgba {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 751, :column 7, :end-line 751, :end-column 11, :arglists (quote ([[r g b a]] [r g b] [r g b a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[r g b a]] [r g b] [r g b a]), :arglists ([[r g b a]] [r g b] [r g b a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/rgba, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[r g b a]] [r g b] [r g b a]), :arglists ([[r g b a]] [r g b] [r g b a]), :arglists-meta (nil nil nil)}, :method-params ([[r g b a]] [r g b] [r g b a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 751, :end-line 751, :max-fixed-arity 4, :fn-var true, :arglists ([[r g b a]] [r g b] [r g b a])}, random-analog {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 1007, :column 7, :end-line 1007, :end-column 20, :arglists (quote ([col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness within given tolerances (+/-)."}, :name thi.ng.color.core/random-analog, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 20, :method-params ([col theta sat bright]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1007, :end-line 1007, :max-fixed-arity 4, :fn-var true, :arglists (quote ([col theta sat bright])), :doc "Returns new color of same type with its hue rotated and adjusted\n  saturation & brightness within given tolerances (+/-)."}, primary-hues {:name thi.ng.color.core/primary-hues, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 969, :column 1, :end-line 969, :end-column 18, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 969, :column 6, :end-line 969, :end-column 18}}, t_thi$ng$color$core15945 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core15945, :file "resources/public/js/out/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 666, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, hues {:name thi.ng.color.core/hues, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 964, :column 1, :end-line 964, :end-column 10, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 964, :column 6, :end-line 964, :end-column 10}}, dist-rgb {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 1016, :column 7, :end-line 1016, :end-column 15, :arglists (quote ([a b])), :doc "Returns RGB distance of any two colors"}, :name thi.ng.color.core/dist-rgb, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1016, :end-line 1016, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "Returns RGB distance of any two colors"}, hue->rgb {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 805, :column 8, :end-line 805, :end-column 16, :private true, :arglists (quote ([h]))}, :private true, :name thi.ng.color.core/hue->rgb, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 16, :method-params ([h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 805, :end-line 805, :max-fixed-arity 1, :fn-var true, :arglists (quote ([h]))}, as-int32 {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 39, :column 4, :end-line 39, :end-column 12, :protocol thi.ng.color.core/IIntConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IIntConvert, :name thi.ng.color.core/as-int32, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, yellow {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 52, :column 4, :end-line 52, :end-column 10, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/yellow, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, saturation {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 47, :column 4, :end-line 47, :end-column 14, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/saturation, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->HSLA {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 431, :column 10, :end-line 431, :end-column 14, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([h s l a]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->HSLA, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :method-params ([h s l a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 431, :end-line 431, :max-fixed-arity 4, :fn-var true, :arglists (quote ([h s l a])), :skip-protocol-flag #{cljs.core/IDeref}}, adjust-saturation {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 57, :column 4, :end-line 57, :end-column 21, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ offset]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/adjust-saturation, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 21, :method-params ([_ offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ offset])), :doc nil}, adjust-alpha {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 59, :column 4, :end-line 59, :end-column 16, :protocol thi.ng.color.core/IColorOps, :doc nil, :arglists (quote ([_ offset]))}, :protocol thi.ng.color.core/IColorOps, :name thi.ng.color.core/adjust-alpha, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 16, :method-params ([_ offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ offset])), :doc nil}, IColorOps {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 55, :column 14, :end-line 55, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {rotate-hue [[_ theta]], adjust-saturation [[_ offset]], adjust-brightness [[_ offset]], adjust-alpha [[_ offset]], invert [[_]], blend [[_ dest t]]}}}, :protocol-symbol true, :name thi.ng.color.core/IColorOps, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 23, :column 1, :line 55, :protocol-info {:methods {rotate-hue [[_ theta]], adjust-saturation [[_ offset]], adjust-brightness [[_ offset]], adjust-alpha [[_ offset]], invert [[_]], blend [[_ dest t]]}}, :info nil, :end-line 55, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, HSLA {:num-fields 4, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/HSLA, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :type true, :column 10, :line 431, :record false, :end-line 431, :skip-protocol-flag #{cljs.core/IDeref}}, complementary {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 994, :column 7, :end-line 994, :end-column 20, :arglists (quote ([col])), :doc "Returns new color of same type with its hue rotated by 180 degrees."}, :name thi.ng.color.core/complementary, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 20, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 994, :end-line 994, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col])), :doc "Returns new color of same type with its hue rotated by 180 degrees."}, ICSSConvert {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 34, :column 14, :end-line 34, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {as-css [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/ICSSConvert, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 34, :protocol-info {:methods {as-css [[_]]}}, :info nil, :end-line 34, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, green {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 43, :column 4, :end-line 43, :end-column 9, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/green, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, CYAN {:name thi.ng.color.core/CYAN, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 789, :column 1, :end-line 789, :end-column 10, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 789, :column 6, :end-line 789, :end-column 10}}, yuva->rgba {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 889, :column 8, :end-line 889, :end-column 18, :private true, :arglists (quote ([yuva] [y u v] [y u v a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([yuva] [y u v] [y u v a]), :arglists ([yuva] [y u v] [y u v a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/yuva->rgba, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([yuva] [y u v] [y u v a]), :arglists ([yuva] [y u v] [y u v a]), :arglists-meta (nil nil nil)}, :method-params ([yuva] [y u v] [y u v a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 889, :end-line 889, :max-fixed-arity 4, :fn-var true, :arglists ([yuva] [y u v] [y u v a])}, cyan {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 50, :column 4, :end-line 50, :end-column 8, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/cyan, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->HSVA {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 344, :column 10, :end-line 344, :end-column 14, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([h s v a]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->HSVA, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :method-params ([h s v a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 344, :end-line 344, :max-fixed-arity 4, :fn-var true, :arglists (quote ([h s v a])), :skip-protocol-flag #{cljs.core/IDeref}}, IColorComponents {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 41, :column 14, :end-line 41, :end-column 30, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {magenta [[_]], black [[_]], hue [[_]], yellow [[_]], saturation [[_]], green [[_]], cyan [[_]], brightness [[_]], luminance [[_]], red [[_]], blue [[_]], alpha [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/IColorComponents, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 30, :column 1, :line 41, :protocol-info {:methods {magenta [[_]], black [[_]], hue [[_]], yellow [[_]], saturation [[_]], green [[_]], cyan [[_]], brightness [[_]], luminance [[_]], red [[_]], blue [[_]], alpha [[_]]}}, :info nil, :end-line 41, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, RGBA {:num-fields 4, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/RGBA, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :type true, :column 10, :line 63, :record false, :end-line 63, :skip-protocol-flag #{cljs.core/IDeref}}, css {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 780, :column 7, :end-line 780, :end-column 10, :arglists (quote ([col]))}, :name thi.ng.color.core/css, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 10, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 780, :end-line 780, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, t_thi$ng$color$core15942 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core15942, :file "resources/public/js/out/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 666, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, as-int24 {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 38, :column 4, :end-line 38, :end-column 12, :protocol thi.ng.color.core/IIntConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IIntConvert, :name thi.ng.color.core/as-int24, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->t_thi$ng$color$core15945 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta15946])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core15945, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta15946]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 666, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta15946])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, brightness {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 48, :column 4, :end-line 48, :end-column 14, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/brightness, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, hex6 {:name thi.ng.color.core/hex6, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 18, :column 1, :end-line 18, :end-column 20, :private true, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 18, :column 16, :end-line 18, :end-column 20, :private true}}, as-cmyka {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 32, :column 4, :end-line 32, :end-column 12, :protocol thi.ng.color.core/ICMYKConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/ICMYKConvert, :name thi.ng.color.core/as-cmyka, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 12, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, IRGBConvert {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 22, :column 14, :end-line 22, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {as-rgba [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/IRGBConvert, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 22, :protocol-info {:methods {as-rgba [[_]]}}, :info nil, :end-line 22, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, yuva {:name thi.ng.color.core/yuva, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 958, :column 1, :end-line 958, :end-column 10, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 958, :column 6, :end-line 958, :end-column 10}}, GRAY {:name thi.ng.color.core/GRAY, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 794, :column 1, :end-line 794, :end-column 10, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 794, :column 6, :end-line 794, :end-column 10}}, ->t_thi$ng$color$core15951 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta15952])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core15951, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta15952]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 666, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta15952])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, as-hsva {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 26, :column 4, :end-line 26, :end-column 11, :protocol thi.ng.color.core/IHSVConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IHSVConvert, :name thi.ng.color.core/as-hsva, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, ->t_thi$ng$color$core15948 {:protocol-inline nil, :meta {:anonymous true, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([to-rgba from-rgba ctor col meta15949])), :file nil}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->t_thi$ng$color$core15948, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :method-params ([to-rgba from-rgba ctor col meta15949]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 666, :max-fixed-arity 5, :fn-var true, :arglists (quote ([to-rgba from-rgba ctor col meta15949])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, WHITE {:name thi.ng.color.core/WHITE, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 793, :column 1, :end-line 793, :end-column 11, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 793, :column 6, :end-line 793, :end-column 11}}, ->CMYKA {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 520, :column 10, :end-line 520, :end-column 15, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([c m y k a]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->CMYKA, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([c m y k a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 520, :end-line 520, :max-fixed-arity 5, :fn-var true, :arglists (quote ([c m y k a])), :skip-protocol-flag #{cljs.core/IDeref}}, t_thi$ng$color$core15951 {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert cljs.core/IMeta thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object cljs.core/IWithMeta thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/t_thi$ng$color$core15951, :file "resources/public/js/out/thi/ng/color/core.cljc", :type true, :anonymous true, :column 5, :line 666, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, rgba->yuva {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 878, :column 8, :end-line 878, :end-column 18, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->yuva, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 18, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 878, :end-line 878, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, ->Int24 {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 183, :column 10, :end-line 183, :end-column 15, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([col]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->Int24, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col])), :skip-protocol-flag #{cljs.core/IDeref}}, IHSVConvert {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 25, :column 14, :end-line 25, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {as-hsva [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/IHSVConvert, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 25, :protocol-info {:methods {as-hsva [[_]]}}, :info nil, :end-line 25, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, ns-prefix {:name thi.ng.color.core/ns-prefix, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 20, :column 1, :end-line 20, :end-column 25, :private true, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 20, :column 16, :end-line 20, :end-column 25, :private true}}, cie1931 {:name thi.ng.color.core/cie1931, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 962, :column 1, :end-line 962, :end-column 13, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 962, :column 6, :end-line 962, :end-column 13}}, rgba->ycbcra {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 868, :column 8, :end-line 868, :end-column 20, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->ycbcra, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 20, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 868, :end-line 868, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, cmyka {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 775, :column 7, :end-line 775, :end-column 12, :arglists (quote ([[c m y k a]] [c m y k] [c m y k a])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([[c m y k a]] [c m y k] [c m y k a]), :arglists ([[c m y k a]] [c m y k] [c m y k a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/cmyka, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([[c m y k a]] [c m y k] [c m y k a]), :arglists ([[c m y k a]] [c m y k] [c m y k a]), :arglists-meta (nil nil nil)}, :method-params ([[c m y k a]] [c m y k] [c m y k a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 775, :end-line 775, :max-fixed-arity 5, :fn-var true, :arglists ([[c m y k a]] [c m y k] [c m y k a])}, INV8BIT {:name thi.ng.color.core/INV8BIT, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 16, :column 1, :end-line 16, :end-column 13, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 16, :column 6, :end-line 16, :end-column 13}}, MAGENTA {:name thi.ng.color.core/MAGENTA, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 790, :column 1, :end-line 790, :end-column 13, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 790, :column 6, :end-line 790, :end-column 13}}, luminance {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 49, :column 4, :end-line 49, :end-column 13, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/luminance, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 13, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, random-rgb {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 783, :column 7, :end-line 783, :end-column 17, :arglists (quote ([])), :doc "Returns a random RGBA color with 100% alpha"}, :name thi.ng.color.core/random-rgb, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 783, :end-line 783, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns a random RGBA color with 100% alpha"}, rgba->hcya {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 824, :column 8, :end-line 824, :end-column 18, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->hcya, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 18, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 824, :end-line 824, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, CMYKA {:num-fields 5, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/CMYKA, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 15, :type true, :column 10, :line 520, :record false, :end-line 520, :skip-protocol-flag #{cljs.core/IDeref}}, red {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 42, :column 4, :end-line 42, :end-column 7, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/red, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 7, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, as-css {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 35, :column 4, :end-line 35, :end-column 10, :protocol thi.ng.color.core/ICSSConvert, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/ICSSConvert, :name thi.ng.color.core/as-css, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 10, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, blue {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 44, :column 4, :end-line 44, :end-column 8, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/blue, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 8, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, hsla {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 770, :column 7, :end-line 770, :end-column 11, :arglists (quote ([[h s l a]] [h s l] [h s l a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s l a]] [h s l] [h s l a]), :arglists ([[h s l a]] [h s l] [h s l a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/hsla, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s l a]] [h s l] [h s l a]), :arglists ([[h s l a]] [h s l] [h s l a]), :arglists-meta (nil nil nil)}, :method-params ([[h s l a]] [h s l] [h s l a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 770, :end-line 770, :max-fixed-arity 4, :fn-var true, :arglists ([[h s l a]] [h s l] [h s l a])}, THIRD {:name thi.ng.color.core/THIRD, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 13, :column 1, :end-line 13, :end-column 11, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 13, :column 6, :end-line 13, :end-column 11}}, hsva {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 765, :column 7, :end-line 765, :end-column 11, :arglists (quote ([[h s v a]] [h s v] [h s v a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s v a]] [h s v] [h s v a]), :arglists ([[h s v a]] [h s v] [h s v a]), :arglists-meta (nil nil nil)}}, :name thi.ng.color.core/hsva, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[h s v a]] [h s v] [h s v a]), :arglists ([[h s v a]] [h s v] [h s v a]), :arglists-meta (nil nil nil)}, :method-params ([[h s v a]] [h s v] [h s v a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 765, :end-line 765, :max-fixed-arity 4, :fn-var true, :arglists ([[h s v a]] [h s v] [h s v a])}, hcya->rgba {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 839, :column 8, :end-line 839, :end-column 18, :private true, :arglists (quote ([hcya] [h c y] [h c y a])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([hcya] [h c y] [h c y a]), :arglists ([hcya] [h c y] [h c y a]), :arglists-meta (nil nil nil)}}, :private true, :name thi.ng.color.core/hcya->rgba, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([hcya] [h c y] [h c y a]), :arglists ([hcya] [h c y] [h c y a]), :arglists-meta (nil nil nil)}, :method-params ([hcya] [h c y] [h c y a]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 839, :end-line 839, :max-fixed-arity 4, :fn-var true, :arglists ([hcya] [h c y] [h c y a])}, gamma-correct {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 985, :column 7, :end-line 985, :end-column 20, :arglists (quote ([col gamma])), :doc "Returns gamma corrected version of color as RGBA"}, :name thi.ng.color.core/gamma-correct, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 20, :method-params ([col gamma]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 985, :end-line 985, :max-fixed-arity 2, :fn-var true, :arglists (quote ([col gamma])), :doc "Returns gamma corrected version of color as RGBA"}, ICMYKConvert {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 31, :column 14, :end-line 31, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {as-cmyka [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/ICMYKConvert, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 26, :column 1, :line 31, :protocol-info {:methods {as-cmyka [[_]]}}, :info nil, :end-line 31, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, ->CSS {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 592, :column 10, :end-line 592, :end-column 13, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :skip-protocol-flag #{cljs.core/IDeref}, :factory :positional, :arglists (quote ([col]))}, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/->CSS, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 13, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 592, :end-line 592, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col])), :skip-protocol-flag #{cljs.core/IDeref}}, int24 {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 756, :column 7, :end-line 756, :end-column 12, :arglists (quote ([col]))}, :name thi.ng.color.core/int24, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 12, :method-params ([col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 756, :end-line 756, :max-fixed-arity 1, :fn-var true, :arglists (quote ([col]))}, cie1931-gamma-correct {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 900, :column 8, :end-line 900, :end-column 29, :private true, :arglists (quote ([x]))}, :private true, :name thi.ng.color.core/cie1931-gamma-correct, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 29, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 900, :end-line 900, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, alpha {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 45, :column 4, :end-line 45, :end-column 9, :protocol thi.ng.color.core/IColorComponents, :doc nil, :arglists (quote ([_]))}, :protocol thi.ng.color.core/IColorComponents, :name thi.ng.color.core/alpha, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 9, :method-params ([_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([_])), :doc nil}, rgba->hcva {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 812, :column 8, :end-line 812, :end-column 18, :private true, :arglists (quote ([rgba]))}, :private true, :name thi.ng.color.core/rgba->hcva, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 18, :method-params ([rgba]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 812, :end-line 812, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rgba]))}, IHSLConvert {:meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 28, :column 14, :end-line 28, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {as-hsla [[_]]}}}, :protocol-symbol true, :name thi.ng.color.core/IHSLConvert, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 25, :column 1, :line 28, :protocol-info {:methods {as-hsla [[_]]}}, :info nil, :end-line 28, :impls #{thi.ng.color.core/CMYKA thi.ng.color.core/t_thi$ng$color$core15948 thi.ng.color.core/RGBA thi.ng.color.core/Int24 thi.ng.color.core/CSS thi.ng.color.core/t_thi$ng$color$core15951 thi.ng.color.core/t_thi$ng$color$core15945 thi.ng.color.core/HSLA thi.ng.color.core/t_thi$ng$color$core15942 thi.ng.color.core/HSVA thi.ng.color.core/Int32}, :doc nil, :jsdoc ("@interface")}, RED {:name thi.ng.color.core/RED, :file "resources/public/js/out/thi/ng/color/core.cljc", :line 786, :column 1, :end-line 786, :end-column 9, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 786, :column 6, :end-line 786, :end-column 9}}, HSVA {:num-fields 4, :protocols #{thi.ng.color.core/IHSLConvert thi.ng.color.core/IIntConvert thi.ng.color.core/IRGBConvert thi.ng.color.core/IColorOps thi.ng.color.core/ICSSConvert cljs.core/IDeref thi.ng.color.core/ICMYKConvert thi.ng.color.core/IColorComponents thi.ng.color.core/Object thi.ng.color.core/IHSVConvert}, :name thi.ng.color.core/HSVA, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 14, :type true, :column 10, :line 344, :record false, :end-line 344, :skip-protocol-flag #{cljs.core/IDeref}}, closest-hue {:protocol-inline nil, :meta {:file "/Users/henry/Dropbox/Talks/clojurex-2016/cljx/resources/public/js/out/thi/ng/color/core.cljc", :line 972, :column 7, :end-line 972, :end-column 18, :arglists (quote ([col] [col hues])), :doc "Takes a color and map of hues (e.g. thi.ng.color.core.primary-hues),\n  returns key of closest hue.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col hues]), :arglists ([col] [col hues]), :arglists-meta (nil nil)}}, :name thi.ng.color.core/closest-hue, :variadic false, :file "resources/public/js/out/thi/ng/color/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([col] [col hues]), :arglists ([col] [col hues]), :arglists-meta (nil nil)}, :method-params ([col] [col hues]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 972, :end-line 972, :max-fixed-arity 2, :fn-var true, :arglists ([col] [col hues]), :doc "Takes a color and map of hues (e.g. thi.ng.color.core.primary-hues),\n  returns key of closest hue."}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:lime :orange to-rgba a String :else y :yellow r ctor :green :cyan v double meta15952 m meta15943 :red :blue s k :azure l from-rgba c meta15946 :teal g :magenta :tag :purple meta15949 col h b}, :order [r :tag double g b a col h s v l c m y k String to-rgba from-rgba ctor meta15943 meta15946 meta15949 meta15952 :else :red :orange :yellow :lime :green :teal :cyan :azure :blue :purple :magenta]}, :doc nil}